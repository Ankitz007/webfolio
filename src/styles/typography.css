@reference './global.css';

@layer base {
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply wrap-break-word;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply text-balance;
  }

  p {
    @apply text-pretty;
  }
}

@layer components {
  .prose {
    @apply text-foreground text-base leading-7;
    @apply [&>link[rel="stylesheet"]+*]:mt-0! [&>link[rel="stylesheet"]+*>*]:mt-0!;

    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground/80 my-5;
    }

    :where(h1, h2, h3, h4, h5, h6):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
      @apply text-foreground scroll-mt-32 font-medium xl:scroll-mt-20;
    }

    /* Don't use an <h1> in your posts, one is already generated in blog/[...id].astro */
    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mt-8 mb-6 text-4xl;
    }

    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mt-8 mb-4 text-2xl;
    }

    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mt-8 mb-4 text-xl;
    }

    :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mt-7 mb-3 text-lg;
    }

    :where(h5, h6):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mt-5 mb-3;
    }

    :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground decoration-muted-foreground hover:decoration-foreground font-medium break-words underline underline-offset-[3px] transition-colors;
    }

    :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground font-medium;
    }

    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply marker:text-foreground/30 my-5 ml-6 list-disc [&>li]:mt-0;
    }

    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply marker:text-foreground/30 my-5 ml-6 list-decimal [&>li]:mt-0;
      @apply [&[type='A']]:list-[upper-alpha] [&[type='I']]:list-[upper-roman] [&[type='a']]:list-[lower-alpha] [&[type='i']]:list-[lower-roman];
    }

    /* If a paragraph is immediately followed by a list, give the paragraph a small bottom margin */
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)):has(
        + :where(ul, ol)
      ) {
      @apply mb-2;
    }

    /* If a list immediately follows a paragraph, reduce the list's top margin */
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *))
      + :where(ul, ol):not(
        :where([class~='not-prose'], [class~='not-prose'] *)
      ) {
      @apply mt-2;
    }

    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground/80 pl-2 [&>p]:my-0;
    }

    :where(ul ul, ol ol, ul ol, ol ul):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
      @apply marker:text-foreground/30 my-2 ml-6;
    }

    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply bg-muted/50 relative rounded-sm px-[0.3rem] py-[0.2rem] text-sm font-medium break-words text-(--backquote);
      @apply [&>span[data-line='']>*]:text-(--shiki-light) dark:[&>span[data-line='']>*]:text-(--shiki-dark);
    }

    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
      @apply [&_*]:text-muted-foreground small my-6 border-l-2 pl-6;
    }

    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply my-8 border-t;
    }

    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply mx-auto my-6 block max-w-fit overflow-x-auto text-sm;
    }

    :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply border-muted-foreground/30 border-b;
    }

    :where(th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply px-4 py-2 font-medium;
      @apply text-left [&[align=center]]:text-center [&[align=right]]:text-right;
    }

    :where(tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply border-muted-foreground/30 border-y first:border-t-0 last:border-b-0;
    }

    :where(td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground/80 small fix-margin px-4 py-2 align-top break-words;
      @apply text-left [&[align=center]]:text-center [&[align=right]]:text-right;
    }

    :where(img, video, figure, .expressive-code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
      @apply mx-auto my-6;
    }

    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply max-h-[min(68vh,1000px)]! overflow-y-auto [&::-webkit-scrollbar-corner]:hidden;
    }

    :where(summary):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply [&~*]:small [&~*>*]:first:mt-0! [&~*>*]:last:mb-0!;
    }

    :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      @apply text-foreground bg-muted rounded-md border px-2 py-1 text-xs font-medium;
    }

    :where(.katex-display):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
      @apply text-foreground/80 my-6 overflow-x-auto overflow-y-hidden py-2 tracking-normal;
    }
  }
}

@utility fix-margin {
  @apply [&>*]:first:mt-0! [&>*]:last:mb-0!;
}

@utility small {
  @apply text-sm leading-6 [&_code]:text-xs [&_img,video,figure,details,blockquote,.katex-display,.expressive-code]:my-4! [&_li,ol]:mt-0 [&_p]:my-2! [&_ul]:my-0;
}

@layer components {
  /* Custom styled links */
  [data-link='github-acct'],
  [data-link='custom-url'].rounded {
    display: inline-flex;
    align-items: center;
    padding-right: 0.5rem;
    border-radius: 9999px;
    border-width: 0px !important;

    --uno: 'font-condensed';
    color: var(--fg-light) !important;
    font-size: 0.875rem;
    line-height: 1.25rem;

    background: #8882;
    transform: translateY(6px);
    transition: all 300ms ease-in-out !important;
  }

  [data-link='github-acct'] > img,
  [data-link='custom-url'].rounded > img {
    display: inline-block;
    height: 1.6em;
    width: 1.6em;
    border-radius: 50%;
    margin: 0 0.25rem 0 0;
    object-fit: cover;
  }

  [data-link='github-repo']:not(.github),
  [data-link='custom-url'].square {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.375rem;
    border-radius: 0.25rem;
    border-width: 0px !important;

    --uno: 'font-condensed';
    color: var(--fg-light) !important;
    line-height: 100%;

    background: #8882;
    transform: translateY(3px);
    transition: all 300ms ease-in-out !important;
  }

  [data-link='github-repo']:not(.github) > img,
  [data-link='custom-url'].square > img {
    display: inline-block;
    height: 1.1em;
    width: 1.1em;
    border-radius: 2px;
    margin: 0 0.25rem 0 0;
    object-fit: cover;
  }

  [data-link='github-acct']:hover,
  [data-link='github-repo']:not(.github):hover,
  [data-link='custom-url'].rounded:hover,
  [data-link='custom-url'].square:hover {
    color: var(--fg) !important;
    background: #8883;
  }

  [data-link='github-repo'].github,
  [data-link='npm-pkg'] {
    --uno: 'font-mono';
  }

  [data-link='custom-url'] > img,
  [data-link='github-repo'].github > img,
  [data-link='npm-pkg'] > img {
    display: inline-block;
    width: 1.05em;
    height: 1.05em;
    border-radius: 0;
    margin: 0 0.25rem 0.2rem 0.1rem;
  }

  /* Styled badges */
  .rds-badge {
    display: inline-block;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    margin-right: 0.5rem;

    color: white;
    font-size: 0.75rem;
    line-height: 1rem;
    text-transform: uppercase;

    background-color: var(--badge-color-light, #a8a29e);
  }

  .dark .rds-badge {
    color: black;
    background-color: var(--badge-color-dark, #a8a29e);
  }

  [data-badge='n'] {
    --badge-color-light: #f87171;
    --badge-color-dark: #fecaca;
  }

  [data-badge='a'] {
    --badge-color-light: #fb923c;
    --badge-color-dark: #fed7aa;
  }

  [data-badge='v'] {
    --badge-color-light: #facc15;
    --badge-color-dark: #fef08a;
  }
}
