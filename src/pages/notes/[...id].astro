---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import LightGallery from '@/components/LightGallery.astro'
import Link from '@/components/Link.astro'
import PageHead from '@/components/PageHead.astro'
import { badgeVariants } from '@/components/ui/badge'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import {
  containsMathExpressions,
  getAllNotes,
  parseAuthors,
} from '@/lib/data-utils'
import { formatDate } from '@/lib/utils'
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'
import { render } from 'astro:content'

export async function getStaticPaths() {
  const notes = await getAllNotes()
  return notes.map((note) => ({
    params: { id: note.id },
    props: note,
  }))
}

const note = Astro.props
const { Content } = await render(note)
const { data } = note
const authors = await parseAuthors([SITE.author])

// Detect if the note content contains mathematical expressions
const needsKatex = containsMathExpressions(note.body ?? '')
---

<Layout class="max-w-3xl" needsKatex={needsKatex}>
  <PageHead
    slot="head"
    title={`${data.title} - Notes`}
    description={data.description || `A note from ${formatDate(data.date)}`}
  />

  <Breadcrumbs
    items={[
      { label: 'Notes', href: '/notes', icon: 'lucide:notepad-text' },
      { label: data.title, icon: 'lucide:file-text' },
    ]}
  />

  <section class="flex flex-col gap-y-6 text-center">
    <div class="flex flex-col">
      <h1
        class="mb-2 scroll-mt-31 text-3xl leading-tight font-medium sm:text-4xl"
        id="note-title"
      >
        {data.title}
      </h1>

      <div
        class="text-muted-foreground divide-border mb-4 flex flex-col items-center justify-center divide-y text-xs sm:flex-row sm:flex-wrap sm:divide-x sm:divide-y-0 sm:text-sm"
      >
        {
          authors.length > 0 && (
            <div class="flex w-full items-center justify-center gap-x-2 py-2 sm:w-fit sm:px-2 sm:py-0 first:sm:pl-0 last:sm:pr-0">
              {authors.map((author) => (
                <div class="flex items-center gap-x-1.5">
                  <Image
                    src={author.avatar}
                    alt={author.name}
                    width={20}
                    height={20}
                    class="rounded-full"
                  />
                  {author.isRegistered ? (
                    <Link
                      href={`/authors/${author.id}`}
                      underline
                      class="text-foreground"
                    >
                      <span>{author.name}</span>
                    </Link>
                  ) : (
                    <span>{author.name}</span>
                  )}
                </div>
              ))}
            </div>
          )
        }

        <div
          class="flex w-full items-center justify-center gap-2 py-2 sm:w-fit sm:px-2 sm:py-0 first:sm:pl-0 last:sm:pr-0"
        >
          <span>{formatDate(data.date)}</span>
        </div>
      </div>

      {
        data.tags && data.tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2">
            {data.tags.map((tag: string) => (
              <a
                href={`/notes/tags/${tag}`}
                class={badgeVariants({ variant: 'secondary' })}
              >
                <Icon name="lucide:hash" class="size-3" />
                {tag}
              </a>
            ))}
          </div>
        )
      }
    </div>
  </section>

  <article class="prose prose-lg dark:prose-invert max-w-none">
    <div class="note-content">
      <!-- Add LightGallery for lightbox effect on note images -->
      <LightGallery
        selector="article.prose"
        asyncInsert={true}
        tabFocus={true}
      />
      <Content />
    </div>
  </article>

  <div class="border-border mt-12 border-t pt-8">
    <a
      href="/notes"
      class="text-muted-foreground hover:text-foreground inline-flex items-center gap-2 text-sm transition-colors"
    >
      <Icon name="lucide:arrow-left" class="size-4" />
      Back to all notes
    </a>
  </div>
</Layout>

<style>
  .note-content :global(h1:first-child),
  .note-content :global(h2:first-child),
  .note-content :global(h3:first-child) {
    margin-top: 0;
  }

  .note-content :global(blockquote) {
    border-left: 4px solid hsl(var(--primary));
    background: hsl(var(--muted));
    padding: 1rem 1.5rem;
    margin: 1.5rem 0;
    border-radius: 0.5rem;
  }

  .note-content :global(code:not(pre code)) {
    background: hsl(var(--muted));
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
</style>
